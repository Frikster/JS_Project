{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/board.js","webpack:///./lib/player_pokemon.js","webpack:///./lib/poke_royale.js","webpack:///./lib/pokemon.js","webpack:///./lib/sidebar_pokemon.js","webpack:///./lib/spawn_sidebar.js","webpack:///./lib/ui.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,sBAAsB,mBAAO,CAAC,iDAAkB;AACrB;AACgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sDAAY;AAC5C;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iD;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,8B;AACA;AACA;AACA,8B;AACA;AACA;AACA,8B;AACA;AACA;;AAEA;AACA;AACA;AACA,6C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET,6C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,qDAAoB;AAC7D;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,EAAC;;;AAGrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0BAA0B,gCAAgC,EAAE;AAC5D,WAAW;;AAEX;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;AC/RA,gBAAgB,mBAAO,CAAC,mCAAW;AACnC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sC;AACA,8BAA8B,2FAA2F;AACzH,qCAAqC,yEAAyE;AAC9G;AACA;AACA,qC;;AAEA;AACA;;;AAG4B;AACF;;AAE1B;AACA;AACA,mBAAmB,8CAAK;AACxB,oBAAoB,8CAAK;;AAEzB;;AAEA;AACA,oBAAoB,8CAAK;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,eAAe;AACf;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,cAAc,gCAAE;AAChB,CAAC;;;;;;;;;;;;;;ACzGD,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;ACvGA;AAAA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,gBAAgB,mBAAO,CAAC,mCAAW;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACe,6EAAc,E;;;;;;;;;;;;ACjB7B;AAAA;AAA8C;AAC9C,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA,qBAAqB,wDAAc;;AAEnC;AACA,wBAAwB,wDAAc;AACtC;;AAEA,4BAA4B,wDAAc;AAC1C;AACA,WAAW,OAAO,wDAAc;AAChC;AACA,WAAW,OAAO,wDAAc;AAChC;AACA,WAAW,OAAO,wDAAc;AAChC;AACA,WAAW,OAAO,wDAAc,EAAE,UAAU;AAC5C,4CAA4C,wDAAc;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEe,2EAAY,E;;;;;;;;;;;;ACzC3B;AAAA;AAAA,aAAa,mBAAO,CAAC,6BAAQ,E;;AAE7B;AACA;AACA,uC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;AAChD,gDAAgD;;AAEhD;AACA,GAAG;AACH;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,mC;AACA;AACA;AACA;AACA;;AAEA,sB","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/poke_royale.js\");\n","const Util = require(\"./util\");\nconst PlayerPokemon = require(\"./player_pokemon\");\nimport * as UI from \"./ui\";\nimport SpawnSidebar from \"./spawn_sidebar\";\n\nclass Board {\n    constructor(ctx) {\n        this.ctx = ctx;\n        this.enemyPokemon = [];\n        this.playerPokemon = [];\n        this.selectorRectangle = null;\n        this.previousLeftMouseClick = [];\n        this.spawnSidebar = new SpawnSidebar(Board.SPAWN_SIDEBAR_COORDS);\n    }\n\n    add(object) {\n        if (object instanceof PlayerPokemon) {\n            this.playerPokemon.push(object);\n        } else  {\n            throw new Error(\"unknown type of object\");\n        }\n    }\n\n    addPlayerPokemon(pos) {\n        const playerPokemon = new PlayerPokemon({\n            pos: pos || this.randomPosition(),\n        });\n\n        this.add(playerPokemon);\n        return playerPokemon;\n    }\n\n    randomPosition() {\n        return [\n            Game.DIM_X * Math.random(),\n            Game.DIM_Y * Math.random()\n        ];\n    }\n\n    allObjects() {\n        if (this.selectorRectangle) {\n            return [].concat(this.playerPokemon, this.enemyPokemon, [this.selectorRectangle]);\n        } else {\n            return [].concat(this.playerPokemon, this.enemyPokemon);\n        }\n    }\n\n    allPokemon() {\n        return [].concat(this.playerPokemon, this.enemyPokemon);\n    }\n\n    moveObjects(delta) {\n        this.allPokemon().forEach((object) => {\n            if (object instanceof PlayerPokemon){ \n                object.move(delta);\n            }\n        });\n        }\n\n        step(delta) {\n        this.moveObjects(delta);\n        this.checkDestinations();\n        // this.checkCollisions();\n    }\n\n    checkDestinations() {\n        this.allPokemon().filter(obj => obj.destination).forEach( obj => {\n            if(Util.dist(obj.pos, obj.destination) <= (obj.radius / 2) ) {\n                obj.vel = [0,0];\n            }\n        })\n    }\n\n    pokemonClicked(pokemon, clickPos){\n        if(Util.dist(pokemon.pos, clickPos) <= (pokemon.radius + 3)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    // handleMouseClick(e) {\n    //     e.preventDefault();\n    //     if(e.button == 0) { \n    //         this.handleLeftMouseClick(e)\n    //     }\n    //     if(e.button == 1) { \n    //         // middle-mouse\n    //     }\n    //     if(e.button == 2) { \n    //         this.handleLeftMouseClick(e)\n    //     }\n\n    // }\n    selectOnePokemon(selectedPoke) {\n        selectedPoke.selected = true\n        this.playerPokemon.forEach( poke => { \n            if(poke != selectedPoke) {\n                poke.selected = false;\n            }\n        });\n        return selectedPoke;\n    }\n    // TODO: refactor this function with the above\n    dragOnePokemon(draggedPoke) {\n        draggedPoke.isDragging = true;\n        this.spawnSidebar.pokemon.forEach(poke => {\n            if (poke != draggedPoke) {\n                poke.isDragging = false;\n            }\n        });\n        return draggedPoke;\n    }\n\n    selectOnlyThesePokemon(selectedPokes) {\n        selectedPokes.forEach(poke => {\n            poke.selected = true;\n        });\n\n        this.playerPokemon.forEach( poke => { \n            if(!selectedPokes.includes(poke)) {\n                poke.selected = false;\n            }\n        });\n        return selectedPokes;\n    }\n\n    handleLeftMouseClick(e) {\n        this.previousLeftMouseClick = [e.x,e.y]\n        this.playerPokemon.forEach( poke => {\n            if(this.pokemonClicked(poke, [e.x,e.y])) {\n                this.selectOnePokemon(poke);\n            }\n        });\n        this.spawnSidebar.pokemon.forEach(poke => {\n          if (this.pokemonClicked(poke, [e.x, e.y])) {\n            // poke.isDragging = true;\n            this.dragOnePokemon(poke);\n            // this.selectorRectangle = null;\n          }\n        });\n    }\n\n    handleRightMouseClick(e) {\n        e.preventDefault();\n        let didDeselect = false;\n        this.playerPokemon.forEach( poke => {\n            if(this.pokemonClicked(poke, [e.x,e.y])) {\n                poke.selected = false;\n                didDeselect = true;\n            }\n        })\n        if (!didDeselect) {\n        this.playerPokemon.forEach( poke => {\n            if(poke.selected) {\n                poke.vel = Util.direction(poke.pos,[e.x,e.y]);\n                poke.destination = [e.x,e.y];\n            }\n        })\n        }\n    }\n\n    handleMouseDownAndMouseMove(e) {\n        if (!this.pokeBeingDragged()) {\n            if (!this.selectorRectangle) {\n            this.selectorRectangle = new UI.SelectorRectangle(\n                this.previousLeftMouseClick,\n                [e.x, e.y]\n            );\n            } else {\n            // console.log([e.x, e.y]);\n            this.selectorRectangle.updateRect([e.x, e.y]);\n            }\n        } else {\n            this.spawnSidebar.updateDraggedPoke([e.x, e.y]);\n        }\n    }\n\n    handleMouseUp(e) {\n        this.groupSelect();\n        this.selectorRectangle = null;\n    }\n\n    pokeBeingDragged() {\n        return this.spawnSidebar.pokemon.filter(poke => poke.isDragging).length > 0;\n    }\n\n    groupSelect() {\n        if(!this.selectorRectangle) return;\n        // debugger\n        this.selectOnlyThesePokemon(this.playerPokemon.filter(poke =>\n            this.selectorRectangle.inSelectRectangle(poke.pos)\n          ));\n    }\n\n    draw(ctx) {\n        ctx.clearRect(0, 0, Board.DIM_X, Board.DIM_Y);\n        ctx.fillStyle = Board.BG_COLOR;\n        ctx.fillRect(0, 0, Board.DIM_X, Board.DIM_Y);\n\n        this.allObjects().forEach((object) => {\n            // console.log('draw object:' + object)\n            if(object instanceof PlayerPokemon) {\n                // console.log(object.selected)\n            }\n            object.draw(ctx);\n        });\n        this.spawnSidebar.draw(ctx);\n    }\n\n    start() {\n        this.lastTime = 0;\n        // start the animation\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n    animate(time) {\n        const timeDelta = time - this.lastTime;\n\n        this.step(timeDelta);\n        this.draw(this.ctx);\n        this.lastTime = time;\n\n        // every call to animate requests causes another call to animate\n        requestAnimationFrame(this.animate.bind(this));\n    }\n}\n\nBoard.BG_COLOR = \"#28ba32\";\nBoard.DIM_X = 1000;\nBoard.DIM_Y = 300;\nBoard.SPAWN_SIDEBAR_COORDS = [800, 50]\nBoard.FPS = 32;\n// Board.MOVES = {\n//   w: [0, -1],\n//   a: [-1, 0],\n//   s: [0, 1],\n//   d: [1, 0],\n// };\n\nexport default Board;\n\n\n// class GameView {\n//   constructor(game, ctx) {\n//     this.ctx = ctx;\n//     this.game = game;\n//     this.player_pokemon = this.game.addPlayerPokemon();\n//   }\n\n// //   bindKeyHandlers() {\n// //     const player_pokemon = this.player_pokemon;\n\n// //     Object.keys(GameView.MOVES).forEach((k) => {\n// //       const direction = GameView.MOVES[k];\n// //       key(k, () => { player_pokemon.move(direction); });\n// //     });\n\n// //     key()\n\n// //   }\n\n//   start() {\n//     this.lastTime = 0;\n//     // start the animation\n//     requestAnimationFrame(this.animate.bind(this));\n//   }\n\n//   animate(time) {\n//     const timeDelta = time - this.lastTime;\n\n//     this.game.step(timeDelta);\n//     this.game.draw(this.ctx);\n//     this.lastTime = time;\n\n//     // every call to animate requests causes another call to animate\n//     requestAnimationFrame(this.animate.bind(this));\n//   }\n// }\n\n// GameView.MOVES = {\n//   w: [0, -1],\n//   a: [-1, 0],\n//   s: [0, 1],\n//   d: [1, 0],\n// };\n\n// module.exports = GameView;","const Pokemon = require(\"./pokemon\");\nconst Util = require(\"./util\");\n\nclass PlayerPokemon extends Pokemon {\n  constructor(options) {\n    options.radius = PlayerPokemon.RADIUS;\n    options.vel = [0, 0];\n    options.color = options.color || Util.randomColor();\n    super(options);\n    this.selected = false;\n  }\n\n  relocate() {\n    this.pos = this.game.randomPosition();\n    this.vel = [0, 0];\n  }\n}\n\nPlayerPokemon.RADIUS = 15;\nmodule.exports = PlayerPokemon;\n","// const MovingObject = require(\"./moving_object.js\");\n// const Util = require(\"./util.js\");\n// const Game = require(\"./game.js\");\n// window.Game = Game;\n// window.MovingObject = MovingObject;\n// window.ctx = document.getElementById(\"game-canvas\").getContext(\"2d\");\n\n// console.log(\"Webpack is working!\");\n// console.log(\"test!\");\n\n// function PokeRoyale(options) {\n//   PokeRoyale.prototype.COLOR = 'pink';\n//   PokeRoyale.prototype.RADIUS = 69; \n//   MovingObject.call(this, {pos: options.pos, color: this.COLOR, radius: this.RADIUS, vel: Util.randomVec(this.RADIUS)});\n//   // const mo = new MovingObject({color: this.COLOR, radius: this.RADIUS, vel: Util.randomVec(this.RADIUS)});\n// }\n// // Asteroid.prototype.COLOR = 'pink';\n// // Asteroid.prototype.RADIUS = 69; \n\n// Util.inherits(Asteroid, MovingObject);\n// window.PokeRoyale = PokeRoyale;\n\n\nimport Board from \"./board\";\nimport * as UI from \"./ui\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Board.DIM_X;\n  canvasEl.height = Board.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n\n  ctx.translate(0,0)\n  const board = new Board(ctx);\n  board.start();\n\n  // TODO: Needs to be deleted later as User chooses either fire/water/grass at start\n  board.addPlayerPokemon([100,100]);\n  board.addPlayerPokemon([200,200]);\n\n  canvasEl.offsetX = 0;\n  function EventWrapper(e, canvas) {\n    this.x = e.x + canvas.offsetX || e.x;\n    this.y = e.y + canvas.offsetY || e.y;\n    // this.y = e.pageY - 20;\n    this.preventDefault = e.preventDefault;\n  }\n\n  canvasEl.addEventListener(\"mousedown\", function(e){\n    let wrapper = new EventWrapper(e, this)\n    let evt = { x: e.x, y: e.y };\n    evt.x -= -200;\n    evt.y -= -20;\n    board.handleLeftMouseClick.bind(board)(wrapper);\n    this.onmousemove = function (e) {\n      let wrapper = new EventWrapper(e, this);\n      console.log(\"e.x: \" + e.x)\n      console.log(\"wrapper.x: \" + wrapper.x);\n      board.handleMouseDownAndMouseMove.bind(board)(wrapper);\n     }\n    // this.addEventListener(\"mousemove\", board.handleMouseDownAndMouseMove.bind(board));\n  });\n  canvasEl.addEventListener(\"mouseup\", function(e){\n    let evt = { x: e.x, y: e.y }\n    evt.x -= -200;\n    evt.y -= -20;\n    board.handleMouseUp.bind(board)(evt);\n    this.onmousemove = null;\n    // this.removeEventListener(\"mousemove\", board.handleMouseDownAndMouseMove);\n  });\n  canvasEl.addEventListener('click', function(e){\n    let evt = { x: e.x, y: e.y }\n    evt.x -= -200;\n    evt.y -= -20;\n    this.onmousemove = null;\n    board.handleLeftMouseClick.bind(board)(evt);},\n    false);\n  canvasEl.addEventListener('contextmenu', function(e){\n    let evt = { x: e.x, y: e.y }\n    evt.x -= -200;\n    evt.y -= -20;\n    this.onmousemove = null;\n    board.handleRightMouseClick.bind(board)(evt);\n  }, false);\n  // TODO use 4 rectangles as a border around viewport and mouseover on each\n  canvasEl.addEventListener('mousemove', function(e) {\n    if (e.x >= (canvasEl.width - 5)) {\n      this.offsetX += e.x + 5 - canvasEl.width;\n      console.log(\"this.offsetX: \" + this.offsetX);\n      ctx.translate(-(e.x + 5 - canvasEl.width), 0);\n    }\n    // if (e.x > canvasEl.length) {\n    //   ctx.translate(e.x - canvasEl.width)\n    // }\n    // if (e.y < 0) {\n    //   ctx.translate(e.x - canvasEl.width);\n    // }\n    // if (e.y > canvasEl.height) {\n    //   ctx.translate(e.x - canvasEl.width)\n    // }\n  }, false);\n\n  window.ctx = ctx;\n  window.UI = UI;\n});\n\n\n","const Util = require(\"./util\");\n\nclass Pokemon {\n  constructor(options) {\n    this.pos = options.pos;\n    this.vel = options.vel;\n    this.radius = options.radius;\n    this.color = options.color;\n    this.destination = options.destination;\n    this.selected = options.selected;\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.pos[0], this.pos[1], this.radius, 0, 2*Math.PI, true);\n    // ctx.strokeStyle = \"green\";\n    // ctx.lineWidth = 5;\n    ctx.stroke();\n    ctx.fillStyle = this.color;\n    ctx.fill();\n\n    // ctx.fillStyle = this.color;\n\n    // ctx.beginPath();\n    // ctx.arc(\n    //   this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    // );\n    // ctx.fill();\n  }\n\n  move() {\n    this.pos[0] += this.vel[0];\n    this.pos[1] += this.vel[1];\n  }\n\n  moveTo(location) {\n\n  }\n}\n\nmodule.exports = Pokemon;\n \n\n\n// class MovingObject {\n//   constructor(options) {\n//     this.pos = options.pos;\n//     this.vel = options.vel;\n//     this.radius = options.radius;\n//     this.color = options.color;\n//     this.game = options.game;\n//     this.isWrappable = true;\n//   }\n\n//   collideWith(otherObject) {\n//     // default do nothing\n//   }\n\n//   draw(ctx) {\n//     ctx.fillStyle = this.color;\n\n//     ctx.beginPath();\n//     ctx.arc(\n//       this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n//     );\n//     ctx.fill();\n//   }\n\n//   isCollidedWith(otherObject) {\n//     const centerDist = Util.dist(this.pos, otherObject.pos);\n//     return centerDist < (this.radius + otherObject.radius);\n//   }\n\n//   move(timeDelta) {\n//     // timeDelta is number of milliseconds since last move\n//     // if the computer is busy the time delta will be larger\n//     // in this case the MovingObject should move farther in this frame\n//     // velocity of object is how far it should move in 1/60th of a second\n//       this.pos[0] += this.vel[0];\n//       this.pos[1] += this.vel[1];\n    \n//     // const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n//     //     offsetX = this.vel[0] * velocityScale,\n//     //     offsetY = this.vel[1] * velocityScale;\n\n//     // this.pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n\n//     // if (this.game.isOutOfBounds(this.pos)) {\n//     //   if (this.isWrappable) {\n//     //     this.pos = this.game.wrap(this.pos);\n//     //   } else {\n//     //     this.remove();\n//     //   }\n//     // }\n//   }\n\n//   remove() {\n//     this.game.remove(this);\n//   }\n// }\n\n// const NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\n// module.exports = MovingObject;\n","const Util = require(\"./util\");\nconst Pokemon = require(\"./pokemon\");\n\nclass SidebarPokemon extends Pokemon {\n  constructor(options) {\n    options.radius = SidebarPokemon.RADIUS;\n    options.vel = [0, 0];\n    options.color = options.color || Util.randomColor();\n    super(options)\n    this.isDragging = false;\n  }\n\n  \n\n}\n\nSidebarPokemon.RADIUS = 15;\nexport default SidebarPokemon;","import SidebarPokemon from './sidebar_pokemon'\nconst Util = require(\"./util\");\n\nclass SpawnSidebar {\n    constructor(topLeftCoords) {\n        this.topLeftCoords = topLeftCoords;\n        this.width = SidebarPokemon.RADIUS * 4;\n\n        this.pokeX = topLeftCoords[0] + (this.width / 2);\n        this.ySpacing = SidebarPokemon.RADIUS * 3;\n        this.firstPokeYPosition = topLeftCoords[1] + this.ySpacing;\n\n        this.pokemon = [new SidebarPokemon({\n            pos: [this.pokeX, this.firstPokeYPosition]\n          }), new SidebarPokemon({\n            pos: [this.pokeX, this.firstPokeYPosition + this.ySpacing]\n          }), new SidebarPokemon({\n                pos: [this.pokeX, this.firstPokeYPosition + (2*this.ySpacing)]\n          }), new SidebarPokemon({\n                pos: [this.pokeX, this.firstPokeYPosition + (3*this.ySpacing)]\n          }), new SidebarPokemon({ pos: [] })];\n        this.height = this.pokemon.length * SidebarPokemon.RADIUS * 3;\n    }\n\n    draw(ctx) {\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 0.5;\n        ctx.fillStyle = 'white';\n        ctx.fillRect(this.topLeftCoords[0], this.topLeftCoords[1], this.width, this.height);\n\n        this.pokemon.forEach(poke => {\n            poke.draw(ctx);\n        });\n    }\n\n    updateDraggedPoke(pos) {\n        this.pokemon.filter(poke => poke.isDragging)[0].pos = pos;\n    }\n\n}\n\nexport default SpawnSidebar;","const Util = require(\"./util\"); \n\nclass SelectorRectangle {\n    constructor(startCoords, endCoords) {\n        this.startCoords = startCoords; \n        this.updateRect(endCoords);\n    }\n\n    updateRect(endCoords) {\n        this.endCoords = endCoords;\n        this.thirdCoord = [this.startCoords[0], this.endCoords[1]]\n        this.defineRect = [\n            this.startCoords[0],\n            this.startCoords[1],\n            this.endCoords[0],\n            this.endCoords[1],\n            this.thirdCoord[0],\n            this.thirdCoord[1]];\n    }\n\n    inSelectRectangle(coords) {\n        // debugger\n        return Util.inRect(coords, this.defineRect);\n    }\n\n    draw(ctx) {\n        // ctx.fillStyle = 'black';\n        // ctx.fillRect(100,100,200,200);\n        ctx.strokeStyle = 'black';\n        ctx.lineWidth = 0.5;\n        const x = this.endCoords[0] - this.startCoords[0];\n        const y = this.endCoords[1] - this.startCoords[1];\n        ctx.strokeRect(this.startCoords[0],this.startCoords[1],x,y);\n\n        // ctx.rect(this.topleft[0],this.topleft[1],this.bottomRight[0],this.bottomRight[1]);\n        // ctx.stroke();\n    }\n\n\n}\n\nexport {SelectorRectangle};","\nconst Util = {\n  // Find distance between two points.\n  dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n  // Direction vector between two points.\n  direction(pos1, pos2) {\n    return [\n      (pos2[0] - pos1[0]) / Util.dist(pos1, pos2),\n      (pos2[1] - pos1[1]) / Util.dist(pos1, pos2)]\n  },\n  // Note we need 3 points for the rect in case the rectangle is tilted\n  // Corners in ax,ay,bx,by,dx,dy\n  // Point in x, y\n  // Source: https://stackoverflow.com/a/2752754/2734863\n  inRect(point, rect) {\n    [x, y] = point;\n    [ax, ay, bx, by, dx, dy] = rect;\n    const bax = bx - ax;\n    const bay = by - ay;\n    const dax = dx - ax;\n    const day = dy - ay;\n\n    if ((x - ax) * bax + (y - ay) * bay < 0.0) {return false}\n    if ((x - bx) * bax + (y - by) * bay > 0.0) {return false}\n    if ((x - ax) * dax + (y - ay) * day < 0.0) {return false}\n    if ((x - dx) * dax + (y - dy) * day > 0.0) {return false}\n\n    return true\n  },\n  randomColor() {\n    const hexDigits = \"0123456789ABCDEF\";\n\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      color += hexDigits[Math.floor((Math.random() * 16))];\n    }\n\n    return color;\n  }\n\n  // randomVec(length) {\n  //  const deg = 2 * Math.PI * Math.random();\n  //  return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  // },\n  // scale(vec, m) {\n  //   return [vec[0] * m, vec[1] * m];\n  // },\n  // inherits(childClass, parentClass) {\n  //   function Surrogate() {}\n  //   Surrogate.prototype = parentClass.prototype;\n  //   surrogate = new Surrogate();    \n  //   childClass.prototype = surrogate;\n  //   childClass.prototype.constructor = childClass;\n  // }\n};\n\nmodule.exports = Util;"],"sourceRoot":""}